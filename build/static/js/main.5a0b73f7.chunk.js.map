{"version":3,"sources":["Search.js","Button.js","images/Swanson.png","App.js","reportWebVitals.js","index.js"],"names":["Search","getQuote","onSubmit","className","label","aria-label","htmlFor","type","name","placeholder","Button","getRandomQuote","text","onClick","App","useState","swansonQuote","setSwansonQuote","e","a","preventDefault","fetch","target","value","response","json","data","length","Math","floor","random","src","swanson","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAkBeA,MAff,YAA6B,IAAZC,EAAW,EAAXA,SAEb,OACI,sBAAMC,SAAUD,EAAUE,UAAU,SAApC,SACI,uBACIC,MAAM,SACNC,aAAW,SACXC,QAAQ,SACRC,KAAK,OACLC,KAAK,SACLC,YAAY,e,MCHbC,MAPf,YAAyC,IAAxBC,EAAuB,EAAvBA,eAAgBC,EAAO,EAAPA,KAE7B,OACI,wBAAQT,UAAU,SAASU,QAASF,EAApC,SAAqDC,KCN9C,MAA0B,oCCwC1BE,MAhCf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQC,EADR,iDAGb,WAAwBC,GAAxB,iBAAAC,EAAA,6DACED,EAAEE,iBADJ,SAEuBC,MAAM,6DAAD,OAA8DH,EAAEI,OAAO,GAAGC,QAFtG,cAEMC,EAFN,gBAGmBA,EAASC,OAH5B,OAIsB,KADhBC,EAHN,QAIWC,OACPV,EAAgB,cAEhBA,EAAgBS,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKC,UAPzD,4CAHa,kEAcb,8BAAAR,EAAA,sEACuBE,MAAM,sDAD7B,cACMG,EADN,gBAEmBA,EAASC,OAF5B,OAEMC,EAFN,OAGET,EAAgBS,EAAK,IAHvB,4CAda,sBAoBb,OACE,sBAAKvB,UAAU,MAAf,UACoB,KAAjBa,EAAsB,mCAAMA,EAAN,OAA4B,uEACnD,qBAAKe,IAAKC,EAASC,IAAI,8BACvB,mDACA,cAAC,EAAD,CAAQhC,SAzBC,8CA0BT,8DACA,cAAC,EAAD,CAAQU,eA3BC,2CA2B+BC,KAAK,mBCvBpCsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a0b73f7.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Search.css\"\n\nfunction Search({getQuote}) { \n\n    return (\n        <form onSubmit={getQuote} className=\"Search\">\n            <input \n                label=\"search\"\n                aria-label=\"search\"\n                htmlFor=\"search\"\n                type=\"text\" \n                name=\"search\" \n                placeholder=\"...life\" />\n        </form>\n    );\n}\n\nexport default Search;","import React from \"react\";\nimport \"./Button.css\"\n\nfunction Button({getRandomQuote, text}) {\n\n    return(\n        <button className=\"Button\" onClick={getRandomQuote}>{text}</button>\n    );\n}\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/Swanson.3205b98d.png\";","import React, { useState } from \"react\";\nimport './App.css';\nimport Search from \"./Search\";\nimport Button from \"./Button\";\nimport swanson from \"./images/Swanson.png\";\n\n\n\nfunction App() {\n  const [swansonQuote, setSwansonQuote] = useState(\"\");\n\n  async function getQuote(e) {\n    e.preventDefault();\n    let response = await fetch(`https://ron-swanson-quotes.herokuapp.com/v2/quotes/search/${e.target[0].value}`);\n    let data = await response.json();\n    if (data.length === 0) {\n      setSwansonQuote(\"no comment\");\n    } else {\n      setSwansonQuote(data[Math.floor(Math.random() * data.length)]);\n    }      \n  }\n\n  async function getRandomQuote() {\n    let response = await fetch(`https://ron-swanson-quotes.herokuapp.com/v2/quotes`);\n    let data = await response.json();\n    setSwansonQuote(data[0]);\n}\n  \n  return (\n    <div className=\"App\">\n      {swansonQuote !== \"\" ? <h1>\"{swansonQuote}\"</h1> : <h1>Welcome to the Ron Swanson Advice App</h1> }\n      <img src={swanson} alt=\"an outline of ron swanson\"/>\n      <h3>Ask Ron Anything!</h3>\n      <Search getQuote={getQuote}/>\n      <h3>Or Request Random Ron Wisdom</h3>\n      <Button getRandomQuote={getRandomQuote} text=\"Get Wisdom\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}